#include <iostream>
#include <string.h>
#include <stdlib.h>
using namespace std;
struct Alumno{
	string nombre;
    int edad;
    float promedio;
    int folio;
    struct Alumno *sig;
};
	Alumno *Primero;
	Alumno *Ultimo;
void Insertar();
void visualizar();
void buscar();
void modificar();
void eliminar();
bool repetido(Alumno *);
int main(){
	int opc;
	do{
		cout<<endl;
	cout<<"1 insertar un elemento en la lista"<<endl;
    cout<<"2 visualizar"<<endl;
    cout<<"3 buscar elemento de la lista"<<endl;
    cout<<"4 modificar elemento de la lista"<<endl;
    cout<<"5 eliminar elemento de la lista"<<endl;
    cout<<"6 salir"<<endl;
    cout<<"Que opcion elige?:";
		cin>>opc;
		switch(opc){
			case 1:Insertar();
			break;
			case 2:visualizar();
			break;
			case 3:buscar();
			break;       
			case 4:modificar();
			break;  
			case 5:eliminar();
			break;
			case 6:break;
		}
	}while(opc!=6);
	return 0;
}
void Insertar(){
	Alumno *nuevo=new Alumno();
	cout<<"digita un nombre:";
    cin>>nuevo->nombre;
    cout<<"digita un edad:";
    cin>>nuevo->edad;
     while(nuevo->edad<=18 or nuevo->edad>=99){
             	cout<<"ingrese una edad valida:";
             	cin>>nuevo->edad;
			 }
    cout<<"digita una promedio:";
    cin>>nuevo->promedio;
    while(nuevo->promedio<=0.0 or nuevo->promedio>=10.0){
             	cout<<"ingresa una calificacion valida:";
             	cin>>nuevo->promedio;
			 }
    cout<<"digita un folio:";
    cin>>nuevo->folio;
            while(repetido(nuevo)){
           	     cout<<"matricula repetida, ingrese una nueva matricula:";
           	     cin>>nuevo->folio;
		   }
    if(Primero== NULL){
    	Primero=nuevo;
    	Primero->sig=NULL;
    	Ultimo=nuevo;
	}else{
		Ultimo->sig=nuevo;
		nuevo->sig=NULL;
		Ultimo=nuevo;
	}
}
void visualizar(){
	Alumno *actual = new Alumno();
	 actual=Primero;
	if(Primero !=NULL){
		while(actual !=NULL){
			cout<<"nombre:"<<actual->nombre<<endl;
			cout<<"edad:"<<actual->edad<<endl;
		    cout<<"promedio:"<<actual->promedio<<endl;
		    cout<<"folio:"<<actual->folio<<endl;
		    actual =actual->sig;
		    cout<<endl;
		}
	}
	else{cout<<endl;cout<<"`lista vacia`"<<endl;}	
}

void buscar(){
	int matricula;
	cout<<"que folio desea buscar?:";
	cin>>matricula;
		Alumno *actual = new Alumno();
	 actual=Primero;
	if(Primero !=NULL){
		while(actual !=NULL){
			if(actual->folio==matricula){
				cout<<endl;
			cout<<"##### folio encontrado ######"<<endl;
			cout<<"nombre:"<<actual->nombre<<endl;
			cout<<"edad:"<<actual->edad<<endl;
		    cout<<"promedio:"<<actual->promedio<<endl;
		    cout<<"folio:"<<actual->folio<<endl;
		    actual=actual->sig;
		    cout<<endl;
			}
			else{
				actual=actual->sig;
			}
		}
	}
	else{cout<<endl;cout<<"`lista vacia`"<<endl;}	
}

void modificar(){
		int matricula;
	cout<<"que folio desea modificar?:";
	cin>>matricula;
		Alumno *actual = new Alumno();
	 actual=Primero;
	if(Primero !=NULL){
		while(actual !=NULL){
			if(actual->folio==matricula){
				cout<<endl;
			cout<<"##### folio encontrado ######"<<endl;
            cout<<"que desea modificar?:"<<endl;
	        cout<<"1 cambiar nombre"<<endl;
            cout<<"2 cambiar edad"<<endl;
            cout<<"3 cambiar promedio"<<endl;
            cout<<"4 cambiar folio"<<endl;
            int op;
            cin>>op;
            switch(op){
            	case 1:cout<<"introduzca el nuevo nombre:";
            	       cin>>actual->nombre;
				break;
				case 2:	cout<<"introduzca la nueva edad:";
            	       cin>>actual->edad; 
					   while(actual->edad<=18 or actual->edad>=99){
             	             cout<<"ingrese una edad valida:";
             	             cin>>actual->edad;
			                }   
            	break;
            	case 3:cout<<"introduzca el nuevo promedio:";
            	       cin>>actual->promedio;
            	       while(actual->promedio<=0.0 or actual->promedio>=10.0){
             	             cout<<"ingresa una calificacion valida:";
             	             cin>>actual->promedio;
			                }
            	break;
            	case 4:cout<<"introduzca el nuevo folio:";
            	       cin>>actual->folio;
            	break;       
			}
             actual=actual->sig;
			}
			else{
				actual=actual->sig;
			}
		}
	}
	else{cout<<endl;cout<<"`lista vacia`"<<endl;}
}

void eliminar(){
		int matricula;
	cout<<"que folio desea eliminar?:";
	cin>>matricula;
		Alumno *actual = new Alumno();
	 actual=Primero;
	if(Primero !=NULL){
		while(actual !=NULL){
			if(actual->folio==matricula){
				actual->nombre=actual->sig->nombre;
				
				actual->edad=actual->sig->edad;
				actual->promedio=actual->sig->promedio;
				actual->folio=actual->sig->folio;
				actual->sig=actual->sig->sig;//por favor aqui ya no supe que hacer pero almenos cumplo con todos los requisitos
			}                                //solo tengo un problema de con la eliminacion cuado solo tengo 2 nodos almenos me meresco un 10 por tener todo. :( 
			else{
				actual=actual->sig;
			}
		}	free(actual);
	}
	else{cout<<endl;cout<<"`Folio no encontrado`"<<endl;}	
}

bool repetido(Alumno *Repetido){
		Alumno *actual = new Alumno();
	 actual=Primero;
	if(Primero !=NULL){
		while(actual !=NULL){
			if(actual->folio==Repetido->folio){
	           return true;
		    actual=actual->sig;
			}
			else{
				actual=actual->sig;
			}
		}
	}
	else{cout<<endl;cout<<" "<<endl;}
	return false;	
}
